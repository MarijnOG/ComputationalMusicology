unnest(cols = pitches) %>%
mutate(index_column = rep(1:12, each = n() / 12))
library(tidyverse)
library(tidyr)
library(spotifyr)
library(plotly)
library(dplyr)
library(heatmaply)
library(ggplot2)
# Floral - Marsh Partition
# https://open.spotify.com/track/3NrmXanmUQKkbJEUQlgQUv?si=85b12c65cf5d483c
marsh_partition <- get_track_audio_features("3NrmXanmUQKkbJEUQlgQUv?si=85b12c65cf5d483c")
floral <- get_artist_audio_features("floral")
# STBL Martin Garrix 3ebXMykcMXOcLeJ9xZ17XH
# ITNOL Martin Garrix 23L5CiUhw2jV1OIMwthR3S
# DNB 0JI8koDoC5crQbIjhSty59
# summer days 7Feaw9WAEREY0DUOSXJLOM
STBL <- get_track_audio_analysis("3ebXMykcMXOcLeJ9xZ17XH")
STBL <- STBL$segments
STBL_relevant <- STBL[, c(1, 8)]
STBL_relevant <- STBL_relevant %>%
unnest(cols = pitches) %>%
mutate(index_column = rep(1:12, each = nrow(STBL_relevant)))
View(STBL_relevant)
library(tidyverse)
library(tidyr)
library(spotifyr)
library(plotly)
library(dplyr)
library(heatmaply)
library(ggplot2)
# Floral - Marsh Partition
# https://open.spotify.com/track/3NrmXanmUQKkbJEUQlgQUv?si=85b12c65cf5d483c
marsh_partition <- get_track_audio_features("3NrmXanmUQKkbJEUQlgQUv?si=85b12c65cf5d483c")
floral <- get_artist_audio_features("floral")
# STBL Martin Garrix 3ebXMykcMXOcLeJ9xZ17XH
# ITNOL Martin Garrix 23L5CiUhw2jV1OIMwthR3S
# DNB 0JI8koDoC5crQbIjhSty59
# summer days 7Feaw9WAEREY0DUOSXJLOM
STBL <- get_track_audio_analysis("3ebXMykcMXOcLeJ9xZ17XH")
STBL <- STBL$segments
df = data.frame(index_column = rep(1:12, length.out = n))
df
STBL_relevant <- STBL[, c(1, 8)]
STBL_relevant <- STBL_relevant %>%
unnest(cols = pitches) %>%
mutate(index_column = rep(1:12, each = nrow(STBL_relevant)))
View(df)
library(tidyverse)
library(tidyr)
library(spotifyr)
library(plotly)
library(dplyr)
library(heatmaply)
library(ggplot2)
# Floral - Marsh Partition
# https://open.spotify.com/track/3NrmXanmUQKkbJEUQlgQUv?si=85b12c65cf5d483c
marsh_partition <- get_track_audio_features("3NrmXanmUQKkbJEUQlgQUv?si=85b12c65cf5d483c")
floral <- get_artist_audio_features("floral")
# STBL Martin Garrix 3ebXMykcMXOcLeJ9xZ17XH
# ITNOL Martin Garrix 23L5CiUhw2jV1OIMwthR3S
# DNB 0JI8koDoC5crQbIjhSty59
# summer days 7Feaw9WAEREY0DUOSXJLOM
STBL <- get_track_audio_analysis("3ebXMykcMXOcLeJ9xZ17XH")
STBL <- STBL$segments
df = data.frame(index_column = rep(1:12, length.out = 8088))
df
STBL_relevant <- STBL[, c(1, 8)]
STBL_relevant <- STBL_relevant %>%
unnest(cols = pitches) %>%
mutate(index_column = rep(1:12, each = nrow(STBL_relevant)))
View(df)
View(pitch)
library(tidyverse)
library(tidyr)
library(spotifyr)
library(plotly)
library(dplyr)
library(heatmaply)
library(ggplot2)
# Floral - Marsh Partition
# https://open.spotify.com/track/3NrmXanmUQKkbJEUQlgQUv?si=85b12c65cf5d483c
marsh_partition <- get_track_audio_features("3NrmXanmUQKkbJEUQlgQUv?si=85b12c65cf5d483c")
floral <- get_artist_audio_features("floral")
# STBL Martin Garrix 3ebXMykcMXOcLeJ9xZ17XH
# ITNOL Martin Garrix 23L5CiUhw2jV1OIMwthR3S
# DNB 0JI8koDoC5crQbIjhSty59
# summer days 7Feaw9WAEREY0DUOSXJLOM
STBL <- get_track_audio_analysis("3ebXMykcMXOcLeJ9xZ17XH")
STBL <- STBL$segments
df = data.frame(index_column = rep(1:12, length.out = 8088))
df
STBL_relevant <- STBL[, c(1, 8)]
STBL_relevant <- STBL_relevant %>%
unnest(cols = pitches)
STBL_relevant <- cbind(STBL_relevant, index_column = rep(1:12, each = nrow(STBL_relevant)))
View(STBL_relevant)
library(tidyverse)
library(tidyr)
library(spotifyr)
library(plotly)
library(dplyr)
library(heatmaply)
library(ggplot2)
# Floral - Marsh Partition
# https://open.spotify.com/track/3NrmXanmUQKkbJEUQlgQUv?si=85b12c65cf5d483c
marsh_partition <- get_track_audio_features("3NrmXanmUQKkbJEUQlgQUv?si=85b12c65cf5d483c")
floral <- get_artist_audio_features("floral")
# STBL Martin Garrix 3ebXMykcMXOcLeJ9xZ17XH
# ITNOL Martin Garrix 23L5CiUhw2jV1OIMwthR3S
# DNB 0JI8koDoC5crQbIjhSty59
# summer days 7Feaw9WAEREY0DUOSXJLOM
STBL <- get_track_audio_analysis("3ebXMykcMXOcLeJ9xZ17XH")
STBL <- STBL$segments
df = data.frame(index_column = rep(1:12, length.out = 8088))
df
STBL_relevant <- STBL[, c(1, 8)]
STBL_relevant <- STBL_relevant %>%
unnest(cols = pitches)
#STBL_relevant <- cbind(STBL_relevant, index_column = rep(1:12, each = nrow(STBL_relevant)))
library(tidyverse)
library(tidyr)
library(spotifyr)
library(plotly)
library(dplyr)
library(heatmaply)
library(ggplot2)
# Floral - Marsh Partition
# https://open.spotify.com/track/3NrmXanmUQKkbJEUQlgQUv?si=85b12c65cf5d483c
marsh_partition <- get_track_audio_features("3NrmXanmUQKkbJEUQlgQUv?si=85b12c65cf5d483c")
floral <- get_artist_audio_features("floral")
# STBL Martin Garrix 3ebXMykcMXOcLeJ9xZ17XH
# ITNOL Martin Garrix 23L5CiUhw2jV1OIMwthR3S
# DNB 0JI8koDoC5crQbIjhSty59
# summer days 7Feaw9WAEREY0DUOSXJLOM
STBL <- get_track_audio_analysis("3ebXMykcMXOcLeJ9xZ17XH")
STBL <- STBL$segments
one_through_12 = data.frame(index_column = rep(1:12, length.out = ))
STBL_relevant <- STBL[, c(1, 8)]
STBL_relevant <- STBL_relevant %>%
unnest(cols = pitches)
STBL_relevant = cbind(STBL_relevant, one_through_12)
View(STBL_relevant)
# Create a heatmap
ggplot(STBL_relevant, aes(x = start, y = pitches, fill = pitches)) +
geom_tile() +
scale_fill_viridis_c() +  # You can change the color scale if needed
labs(title = "Heatmap of Rows",
x = "Segment start",
y = "Chroma feature")
# Create a heatmap
ggplot(STBL_relevant, aes(x = start, y = index_column, fill = pitches)) +
geom_tile() +
scale_fill_viridis_c() +  # You can change the color scale if needed
labs(title = "Heatmap of Rows",
x = "Segment start",
y = "Chroma feature")
# Create a heatmap
ggplot(STBL_relevant, aes(x = factor(start), y = factor(index_column), fill = pitches)) +
geom_tile() +
scale_fill_viridis_c() +  # You can change the color scale if needed
labs(title = "Heatmap of Rows",
x = "Segment start",
y = "Chroma feature")
library(tidyverse)
library(tidyr)
library(spotifyr)
library(plotly)
library(dplyr)
library(heatmaply)
library(ggplot2)
# Floral - Marsh Partition
# https://open.spotify.com/track/3NrmXanmUQKkbJEUQlgQUv?si=85b12c65cf5d483c
marsh_partition <- get_track_audio_features("3NrmXanmUQKkbJEUQlgQUv?si=85b12c65cf5d483c")
floral <- get_artist_audio_features("floral")
# STBL Martin Garrix 3ebXMykcMXOcLeJ9xZ17XH
# ITNOL Martin Garrix 23L5CiUhw2jV1OIMwthR3S
# DNB 0JI8koDoC5crQbIjhSty59
# summer days 7Feaw9WAEREY0DUOSXJLOM
STBL <- get_track_audio_analysis("3ebXMykcMXOcLeJ9xZ17XH")
STBL <- STBL$segments
one_through_12 = data.frame(index_column = rep(1:12, length.out = ))
STBL_relevant <- STBL[, c(1, 8)] %>%
unnest(cols = pitches) %>%
cbind(STBL_relevant, one_through_12)
# Create a heatmap
ggplot(STBL_relevant, aes(x = factor(start), y = factor(index_column), fill = pitches)) +
geom_tile() +
scale_fill_viridis_c() +  # You can change the color scale if needed
labs(title = "Heatmap of Rows",
x = "Segment start",
y = "Chroma feature")
library(tidyverse)
library(tidyr)
library(spotifyr)
library(plotly)
library(dplyr)
library(heatmaply)
library(ggplot2)
# Floral - Marsh Partition
# https://open.spotify.com/track/3NrmXanmUQKkbJEUQlgQUv?si=85b12c65cf5d483c
marsh_partition <- get_track_audio_features("3NrmXanmUQKkbJEUQlgQUv?si=85b12c65cf5d483c")
floral <- get_artist_audio_features("floral")
# STBL Martin Garrix 3ebXMykcMXOcLeJ9xZ17XH
# ITNOL Martin Garrix 23L5CiUhw2jV1OIMwthR3S
# DNB 0JI8koDoC5crQbIjhSty59
# summer days 7Feaw9WAEREY0DUOSXJLOM
STBL <- get_track_audio_analysis("3ebXMykcMXOcLeJ9xZ17XH")
STBL <- STBL$segments
one_through_12 = data.frame(index_column = rep(1:12, length.out = ))
STBL_relevant <- STBL[, c(1, 8)] %>%
unnest(cols = pitches)
STBL_relevant = cbind(STBL_relevant, one_through_12)
# Create a heatmap
ggplot(STBL_relevant, aes(x = factor(start), y = factor(index_column), fill = pitches)) +
geom_tile() +
scale_fill_viridis_c() +  # You can change the color scale if needed
labs(title = "Heatmap of Rows",
x = "Segment start",
y = "Chroma feature")
night_owlish <- "https://raw.githubusercontent.com/batpigandme/night-owlish/master/rstheme/night-owlish.rstheme"
rstudioapi::addTheme(night_owlish, apply = TRUE)
remotes::install_github('jaburgoyne/compmus')
install.packages("remotes")
install.packages("remotes")
remotes::install_github('jaburgoyne/compmus')
ggplot(corpus_relevant, aes(x = danceability, y = tempo, color = energy)) +
geom_point(size = 3) +
scale_color_continuous(low = "green", high = "red") +
geom_text(aes(label = track.name), check_overlap = TRUE, vjust = -1) +
scale_y_continuous(limits = c(80, 220)) +
scale_x_continuous(limits = c(0.1, 0.9)) +
xlab("Danceability score") +
ylab("Tempo (bpm)") +
ggtitle("Corpus energy metrics spread")
library(tidyverse)
library(tidyr)
library(spotifyr)
library(plotly)
library(heatmaply)
library(ggplot2)
# Floral - Marsh Partition
# https://open.spotify.com/track/3NrmXanmUQKkbJEUQlgQUv?si=85b12c65cf5d483c
marsh_partition <- get_track_audio_features("3NrmXanmUQKkbJEUQlgQUv?si=85b12c65cf5d483c")
floral <- get_artist_audio_features("floral")
# STBL Martin Garrix 3ebXMykcMXOcLeJ9xZ17XH
# ITNOL Martin Garrix 23L5CiUhw2jV1OIMwthR3S
# DNB 0JI8koDoC5crQbIjhSty59
# summer days 7Feaw9WAEREY0DUOSXJLOM
STBL <- get_track_audio_analysis("3ebXMykcMXOcLeJ9xZ17XH")
STBL <- STBL$segments
STBL_relevant <- STBL[, c(1, 8)]
STBL_relevant <- STBL_relevant %>%
unnest(cols = pitches) %>%
mutate(index_column = rep(1:12, each = nrow(df_expanded) / 12))
library(tidyverse)
library(tidyr)
library(spotifyr)
library(plotly)
library(heatmaply)
library(ggplot2)
# Floral - Marsh Partition
# https://open.spotify.com/track/3NrmXanmUQKkbJEUQlgQUv?si=85b12c65cf5d483c
marsh_partition <- get_track_audio_features("3NrmXanmUQKkbJEUQlgQUv?si=85b12c65cf5d483c")
floral <- get_artist_audio_features("floral")
# STBL Martin Garrix 3ebXMykcMXOcLeJ9xZ17XH
# ITNOL Martin Garrix 23L5CiUhw2jV1OIMwthR3S
# DNB 0JI8koDoC5crQbIjhSty59
# summer days 7Feaw9WAEREY0DUOSXJLOM
STBL <- get_track_audio_analysis("3ebXMykcMXOcLeJ9xZ17XH")
STBL <- STBL$segments
STBL_relevant <- STBL[, c(1, 8)]
STBL_relevant <- STBL_relevant %>%
unnest(cols = pitches) %>%
mutate(index_column = rep(1:12, each = nrow(df_expanded) / 12))
library(tidyverse)
library(tidyr)
library(spotifyr)
library(plotly)
library(heatmaply)
# Floral - Marsh Partition
# https://open.spotify.com/track/3NrmXanmUQKkbJEUQlgQUv?si=85b12c65cf5d483c
marsh_partition <- get_track_audio_features("3NrmXanmUQKkbJEUQlgQUv?si=85b12c65cf5d483c")
floral <- get_artist_audio_features("floral")
# STBL Martin Garrix 3ebXMykcMXOcLeJ9xZ17XH
# ITNOL Martin Garrix 23L5CiUhw2jV1OIMwthR3S
# DNB 0JI8koDoC5crQbIjhSty59
# summer days 7Feaw9WAEREY0DUOSXJLOM
STBL <- get_track_audio_analysis("3ebXMykcMXOcLeJ9xZ17XH")
STBL <- STBL$segments
STBL_relevant <- STBL[, c(1, 8)]
STBL_relevant <- STBL_relevant %>%
unnest(cols = pitches) %>%
mutate(index_column = rep(1:12, each = nrow(df_expanded) / 12))
library(tidyverse)
library(tidyr)
library(spotifyr)
library(plotly)
library(heatmaply)
library(ggplot2)
# Floral - Marsh Partition
# https://open.spotify.com/track/3NrmXanmUQKkbJEUQlgQUv?si=85b12c65cf5d483c
marsh_partition <- get_track_audio_features("3NrmXanmUQKkbJEUQlgQUv?si=85b12c65cf5d483c")
floral <- get_artist_audio_features("floral")
# STBL Martin Garrix 3ebXMykcMXOcLeJ9xZ17XH
# ITNOL Martin Garrix 23L5CiUhw2jV1OIMwthR3S
# DNB 0JI8koDoC5crQbIjhSty59
# summer days 7Feaw9WAEREY0DUOSXJLOM
STBL <- get_track_audio_analysis("3ebXMykcMXOcLeJ9xZ17XH")
STBL <- STBL$segments
STBL_relevant <- STBL[, c(1, 8)]
STBL_relevant <- STBL_relevant %>%
unnest(cols = pitches) %>%
mutate(index_column = rep(1:12, each = nrow(STBL_relevant) / 12))
# Create a heatmap
ggplot(STBL_relevant, aes(x = start, y = pitches, fill = pitches)) +
geom_tile() +
scale_fill_viridis_c() +  # You can change the color scale if needed
labs(title = "Heatmap of Rows",
x = "Segment start",
y = "Chroma feature")
library(tidyverse)
library(tidyr)
library(spotifyr)
library(plotly)
library(heatmaply)
library(ggplot2)
# Floral - Marsh Partition
# https://open.spotify.com/track/3NrmXanmUQKkbJEUQlgQUv?si=85b12c65cf5d483c
marsh_partition <- get_track_audio_features("3NrmXanmUQKkbJEUQlgQUv?si=85b12c65cf5d483c")
floral <- get_artist_audio_features("floral")
# STBL Martin Garrix 3ebXMykcMXOcLeJ9xZ17XH
# ITNOL Martin Garrix 23L5CiUhw2jV1OIMwthR3S
# DNB 0JI8koDoC5crQbIjhSty59
# summer days 7Feaw9WAEREY0DUOSXJLOM
STBL <- get_track_audio_analysis("3ebXMykcMXOcLeJ9xZ17XH")
# Create a heatmap
ggplot(STBL_relevant, aes(x = start, y = pitches, fill = pitches)) +
geom_tile() +
scale_fill_viridis_c() +  # You can change the color scale if needed
labs(title = "Heatmap of Rows",
x = "Segment start",
y = "Chroma feature")
library(tidyverse)
library(spotifyr)
library(ggplot2)
library(plotly)
library(compmus)
# My playlist: https://open.spotify.com/playlist/2xMkwo39GHbC6An1SLv3A0?si=678c0e78f22a43f1
corpus <- get_playlist_audio_features("", "2xMkwo39GHbC6An1SLv3A0?si=38e568f8d86c48a3")
beatles <- get_playlist_audio_features("", "37i9dQZF1DZ06evO2iBPiw")
corpus_relevant <- corpus[c('track.name', 'danceability', 'instrumentalness', 'energy', 'tempo', 'track.artists')]
beatles_relevant <- beatles[c('track.name', 'danceability', 'instrumentalness', 'energy', 'tempo', 'track.artists')]
#This was done with the help of ChatGPT
corpus_relevant$artist <- lapply(corpus_relevant$track.artists, function(artist) artist$name)
corpus_relevant <- corpus_relevant[, !(names(corpus_relevant) %in% c('track.artists'))]
beatles_relevant$artist <- lapply(beatles_relevant$track.artists, function(artist) artist$name)
beatles_relevant <- beatles_relevant[, !(names(beatles_relevant) %in% c('track.artists'))]
LIT <- get_track_audio_analysis("3RoycW4yhd2HCsWmLR7xIi")
LIT_filtered <- LIT$segments
LIT_filtered <- LIT_filtered[, c(1, 8)] %>%
unnest(cols = pitches)
LIT_filtered = cbind(LIT_filtered, one_through_12)
# Create a heatmap
p4 <- plot_ly(LIT_filtered, x = ~factor(start), y = ~factor(chroma), z = ~pitches, type = "heatmap") %>%
colorbar(title = "Pitches", tickvals = seq(min(LIT_filtered$pitches), max(LIT_filtered$pitches), length.out = 5), tickformat = ".2f") %>%
layout(title = "Chromagram for LIT", xaxis = list(title = "Segment start"), yaxis = list(title = "Chroma feature"))
View(LIT)
View(LIT_filtered)
library(tidyverse)
library(spotifyr)
library(ggplot2)
library(plotly)
library(compmus)
# My playlist: https://open.spotify.com/playlist/2xMkwo39GHbC6An1SLv3A0?si=678c0e78f22a43f1
corpus <- get_playlist_audio_features("", "2xMkwo39GHbC6An1SLv3A0?si=38e568f8d86c48a3")
beatles <- get_playlist_audio_features("", "37i9dQZF1DZ06evO2iBPiw")
corpus_relevant <- corpus[c('track.name', 'danceability', 'instrumentalness', 'energy', 'tempo', 'track.artists')]
beatles_relevant <- beatles[c('track.name', 'danceability', 'instrumentalness', 'energy', 'tempo', 'track.artists')]
#This was done with the help of ChatGPT
corpus_relevant$artist <- lapply(corpus_relevant$track.artists, function(artist) artist$name)
corpus_relevant <- corpus_relevant[, !(names(corpus_relevant) %in% c('track.artists'))]
beatles_relevant$artist <- lapply(beatles_relevant$track.artists, function(artist) artist$name)
beatles_relevant <- beatles_relevant[, !(names(beatles_relevant) %in% c('track.artists'))]
TG_CampAdventure <-
get_tidy_audio_analysis("1zvAP1uHLSDblWvv25rtad") |>
select(segments) |>
unnest(segments) |>
select(start, duration, pitches)
M_CampAdventure <-
get_tidy_audio_analysis("7lu0eXWcw190GRCb98U9Q8") |>
select(segments) |>
unnest(segments) |>
select(start, duration, pitches)
dist_CampAdventure <-
compmus_long_distance(
TG_CampAdventure |> mutate(pitches = map(pitches, compmus_normalise, "manhattan")),
M_CampAdventure |> mutate(pitches = map(pitches, compmus_normalise, "manhattan")),
feature = pitches,
method = "aitchison"
)
View(M_CampAdventure)
campAdventure <-
dist_CampAdventure |>
mutate(
TG_CampAdventure = xstart + xduration / 2,
M_CampAdventure = ystart + yduration / 2
) |>
ggplot(
aes(
x = TG_CampAdventure,
y = M_CampAdventure,
fill = d
)
) +
geom_tile(aes(width = xduration, height = yduration)) +
coord_fixed() +
scale_fill_viridis_c(option = "E", guide = "none") +
theme_classic() +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
labs(x = "Twin Galaxies", y = "Management")
campAdventure
library(tidyverse)
library(spotifyr)
library(ggplot2)
library(plotly)
library(compmus)
# My playlist: https://open.spotify.com/playlist/2xMkwo39GHbC6An1SLv3A0?si=678c0e78f22a43f1
corpus <- get_playlist_audio_features("", "2xMkwo39GHbC6An1SLv3A0?si=38e568f8d86c48a3")
beatles <- get_playlist_audio_features("", "37i9dQZF1DZ06evO2iBPiw")
corpus_relevant <- corpus[c('track.name', 'danceability', 'instrumentalness', 'energy', 'tempo', 'track.artists')]
beatles_relevant <- beatles[c('track.name', 'danceability', 'instrumentalness', 'energy', 'tempo', 'track.artists')]
#This was done with the help of ChatGPT
corpus_relevant$artist <- lapply(corpus_relevant$track.artists, function(artist) artist$name)
corpus_relevant <- corpus_relevant[, !(names(corpus_relevant) %in% c('track.artists'))]
beatles_relevant$artist <- lapply(beatles_relevant$track.artists, function(artist) artist$name)
beatles_relevant <- beatles_relevant[, !(names(beatles_relevant) %in% c('track.artists'))]
get_tidy_audio_analysis('1zvAP1uHLSDblWvv25rtad') |>
tempogram(window_size = 8, hop_size = 1, cyclic = FALSE) |>
ggplot(aes(x = time, y = bpm, fill = power)) +
geom_raster() +
scale_fill_viridis_c(guide = 'none') +
labs(x = 'Time (s)', y = 'Tempo (BPM)') +
theme_classic()
# Taken from the example source code provided for this course.
library(tidyverse)
# Taken from the example source code provided for this course.
library(tidyverse)
library(spotifyr)
library(ggplot2)
library(plotly)
library(compmus)
frozenTwilight <-
get_tidy_audio_analysis("6yMlHBgwnIhrF2Qvnt2Yyn") |>
compmus_align(bars, segments) |>
select(bars) |>
unnest(bars) |>
mutate(
pitches =
map(segments,
compmus_summarise, pitches,
method = "acentre", norm = "manhattan"
)
) |>
mutate(
timbre =
map(segments,
compmus_summarise, timbre,
method = "mean"
)
)
plot_gg <- bind_rows(
frozenTwilight |>
compmus_self_similarity(pitches, "aitchison") |>
mutate(d = d / max(d), type = "Chroma"),
frozenTwilight |>
compmus_self_similarity(timbre, "euclidean") |>
mutate(d = d / max(d), type = "Timbre")
) |>
mutate() |>
ggplot(
aes(
x = xstart + xduration / 2,
width = xduration,
y = ystart + yduration / 2,
height = yduration,
fill = d
)
) +
geom_tile() +
facet_wrap(~type) +
coord_fixed() +
scale_fill_viridis_c(option = "E", guide = "none") +
labs(x = "Time (s)", y = "Time (s)")
# Convert ggplot to plotly
plot_ly_object <- ggplotly(plot_gg)
# Show the interactive plot
plot_ly_object
get_tidy_audio_analysis('1zvAP1uHLSDblWvv25rtad') |>
tempogram(window_size = 8, hop_size = 1, cyclic = FALSE) |>
ggplot(aes(x = time, y = bpm, fill = power)) +
geom_raster() +
scale_fill_viridis_c(guide = 'none') +
labs(x = 'Time (s)', y = 'Tempo (BPM)') +
theme_classic()
get_tidy_audio_analysis('7lu0eXWcw190GRCb98U9Q8') |>
tempogram(window_size = 8, hop_size = 1, cyclic = FALSE) |>
ggplot(aes(x = time, y = bpm, fill = power)) +
geom_raster() +
scale_fill_viridis_c(guide = 'none') +
labs(x = 'Time (s)', y = 'Tempo (BPM)') +
theme_classic()
